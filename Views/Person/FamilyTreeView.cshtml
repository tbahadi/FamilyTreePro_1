@model FamilyTreePro.ViewModels.FamilyTreeViewViewModel

@{
    ViewData["Title"] = "الشجرة الهرمية";
}

<div class="container mt-4 content-container" dir="rtl">
    <!-- النجوم المتحركة -->
    <div class="star star-1"></div>
    <div class="star star-2"></div>
    <div class="star star-3"></div>
    <div class="star star-4"></div>

    <div class="text-center mb-4">
        <h2 class="page-title">@Model.FamilyTreeName - الشجرة الهرمية</h2>
        <p class="page-subtitle">عرض هرمي لجميع أفراد العائلة وتفرعاتها</p>
    </div>

    <div class="d-flex justify-content-between mb-4">
        <a href="@Url.Action("Index", "Person", new { familyTreeId = Model.FamilyTreeId })" class="btn btn-view-normal">
            <i class="fas fa-list me-2"></i> العرض العادي
        </a>
        <a href="@Url.Action("Create", "Person", new { familyTreeId = Model.FamilyTreeId })" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i> إضافة فرد جديد
        </a>
    </div>

    @if (Model.RootPersons != null && Model.RootPersons.Any())
    {
        <!-- إحصائيات سريعة -->
        <div class="tree-stats mb-4">
            <div class="row text-center">
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-total">
                        <div class="stat-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.AllPersons.Count</h3>
                            <span>إجمالي الأفراد</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-female">
                        <div class="stat-icon">
                            <i class="fas fa-venus"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.AllPersons.Count(p => p.Gender == "Female")</h3>
                            <span>الإناث</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-male">
                        <div class="stat-icon">
                            <i class="fas fa-mars"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.AllPersons.Count(p => p.Gender == "Male")</h3>
                            <span>الذكور</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-roots">
                        <div class="stat-icon">
                            <i class="fas fa-layer-group"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.RootPersons.Count</h3>
                            <span>الجذور</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="family-tree">
            @foreach (var rootPerson in Model.RootPersons)
            {
                var children = Model.AllPersons.Where(p => p.FatherId == rootPerson.Id).ToList();

                <div class="root-person">
                    <!-- عرض الشخص الجذر -->
                    <div class="person-card @rootPerson.Gender.ToLower() level-0 connector">
                        <div class="person-name">
                            @rootPerson.FirstName
                            @rootPerson.FatherName
                            @rootPerson.GrandFatherName
                            @rootPerson.LastName
                        </div>
                        <div class="person-details">
                            @if (rootPerson.BirthDate.HasValue)
                            {
                                <div>📅 @rootPerson.BirthDate.Value.ToShortDateString()</div>
                            }
                            @if (!string.IsNullOrEmpty(rootPerson.City))
                            {
                                <div>🏠 @rootPerson.City</div>
                            }
                        </div>
                        <div class="person-actions">
                            <a href="@Url.Action("Details", "Person", new { id = rootPerson.Id })" class="btn btn-info btn-sm">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="@Url.Action("Edit", "Person", new { id = rootPerson.Id })" class="btn btn-warning btn-sm">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="@Url.Action("Create", "Person", new { familyTreeId = rootPerson.FamilyTreeId, fatherId = rootPerson.Id })" class="btn btn-success btn-sm">
                                <i class="fas fa-plus"></i>
                            </a>
                        </div>
                    </div>

                    <!-- عرض الأطفال -->
                    @if (children.Any())
                    {
                        <div class="children-container">
                            @foreach (var child in children)
                            {
                                var grandchildren = Model.AllPersons.Where(p => p.FatherId == child.Id).ToList();

                                <div class="person-card @child.Gender.ToLower() level-1 connector">
                                    <div class="person-name">
                                        @child.FirstName
                                        @child.FatherName
                                        @child.GrandFatherName
                                        @child.LastName
                                    </div>
                                    <div class="person-details">
                                        @if (child.BirthDate.HasValue)
                                        {
                                            <div>📅 @child.BirthDate.Value.ToShortDateString()</div>
                                        }
                                        @if (!string.IsNullOrEmpty(child.City))
                                        {
                                            <div>🏠 @child.City</div>
                                        }
                                    </div>
                                    <div class="person-actions">
                                        <a href="@Url.Action("Details", "Person", new { id = child.Id })" class="btn btn-info btn-sm">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Edit", "Person", new { id = child.Id })" class="btn btn-warning btn-sm">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("Create", "Person", new { familyTreeId = child.FamilyTreeId, fatherId = child.Id })" class="btn btn-success btn-sm">
                                            <i class="fas fa-plus"></i>
                                        </a>
                                    </div>

                                    <!-- عرض الأحفاد -->
                                    @if (grandchildren.Any())
                                    {
                                        <div class="children-container">
                                            @foreach (var grandchild in grandchildren)
                                            {
                                                <div class="person-card @grandchild.Gender.ToLower() level-2 connector">
                                                    <div class="person-name">
                                                        @grandchild.FirstName
                                                        @grandchild.FatherName
                                                        @grandchild.GrandFatherName
                                                        @grandchild.LastName
                                                    </div>
                                                    <div class="person-details">
                                                        @if (grandchild.BirthDate.HasValue)
                                                        {
                                                            <div>📅 @grandchild.BirthDate.Value.ToShortDateString()</div>
                                                        }
                                                        @if (!string.IsNullOrEmpty(grandchild.City))
                                                        {
                                                            <div>🏠 @grandchild.City</div>
                                                        }
                                                    </div>
                                                    <div class="person-actions">
                                                        <a href="@Url.Action("Details", "Person", new { id = grandchild.Id })" class="btn btn-info btn-sm">
                                                            <i class="fas fa-eye"></i>
                                                        </a>
                                                        <a href="@Url.Action("Edit", "Person", new { id = grandchild.Id })" class="btn btn-warning btn-sm">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <a href="@Url.Action("Create", "Person", new { familyTreeId = grandchild.FamilyTreeId, fatherId = grandchild.Id })" class="btn btn-success btn-sm">
                                                            <i class="fas fa-plus"></i>
                                                        </a>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state text-center py-5">
            <div class="empty-icon mb-4">
                <i class="fas fa-project-diagram"></i>
            </div>
            <h4 class="mb-3">لا توجد بيانات للعرض</h4>
            <p class="text-muted mb-4">لم يتم إضافة أي أفراد إلى هذه الشجرة بعد، أو لا توجد أشخاص بدون أب (جذور).</p>
            <a href="@Url.Action("Create", "Person", new { familyTreeId = Model.FamilyTreeId })" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i> إضافة أول فرد
            </a>
        </div>
    }
</div>

<style>
    .family-tree {
        padding: 20px;
        background: #f8f9fa;
        border-radius: 10px;
        min-height: 500px;
    }

    .root-person {
        margin-bottom: 30px;
    }

    .person-card {
        background: white;
        border: 2px solid #007bff;
        border-radius: 10px;
        padding: 15px;
        margin: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        min-width: 200px;
        text-align: center;
        position: relative;
    }

        .person-card.male {
            border-color: #007bff;
            background: linear-gradient(135deg, #ffffff 0%, #e3f2fd 100%);
        }

        .person-card.female {
            border-color: #e91e63;
            background: linear-gradient(135deg, #ffffff 0%, #fce4ec 100%);
        }

        .person-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

    .children-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 20px;
        padding-top: 20px;
        position: relative;
    }

    .level-0 {
        margin-left: 0;
        border: 3px solid #28a745;
    }

    .level-1 {
        margin-left: 40px;
        border: 2px solid #007bff;
    }

    .level-2 {
        margin-left: 80px;
        border: 1px solid #6c757d;
    }

    .person-name {
        font-weight: bold;
        font-size: 14px;
        margin-bottom: 5px;
        color: #000000;
    }

    .person-details {
        font-size: 12px;
        color: #424242;
    }

    .person-actions {
        margin-top: 10px;
    }

    .connector {
        position: relative;
    }

        .connector::before {
            content: '';
            position: absolute;
            top: -20px;
            left: 50%;
            width: 2px;
            height: 20px;
            background: #007bff;
            transform: translateX(-50%);
        }

        .connector::after {
            content: '';
            position: absolute;
            top: 0px;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-left: 6px solid transparent;
            border-right: 6px solid transparent;
            border-top: 8px solid #007bff;
        }

    /* تحسينات للعرض */
    .root-person > .person-card {
        background: linear-gradient(135deg, #ffffff 0%, #d4edda 100%);
        font-weight: bold;
    }
</style>
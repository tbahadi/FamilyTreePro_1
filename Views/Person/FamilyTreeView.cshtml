@model FamilyTreePro.ViewModels.FamilyTreeViewViewModel

@{
    ViewData["Title"] = "الشجرة الهرمية";
}

<!-- إضافة مكتبات الطباعة -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

<div class="container mt-4 content-container" dir="rtl">
    <!-- النجوم المتحركة -->
    <div class="star star-1"></div>
    <div class="star star-2"></div>
    <div class="star star-3"></div>
    <div class="star star-4"></div>

    <div class="text-center mb-4">
        <h2 class="page-title">@Model.FamilyTreeName - الشجرة الهرمية</h2>
        <p class="page-subtitle">عرض هرمي لجميع أفراد العائلة وتفرعاتها</p>
    </div>

    <!-- أزرار التحكم والطباعة -->
    <div class="d-flex justify-content-between mb-4 flex-wrap gap-2">
        <div class="d-flex gap-2">
            <a href="@Url.Action("Index", "Person", new { familyTreeId = Model.FamilyTreeId })" class="btn btn-view-normal">
                <i class="fas fa-list me-2"></i> العرض العادي
            </a>
            <a href="@Url.Action("Create", "Person", new { familyTreeId = Model.FamilyTreeId })" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i> إضافة فرد جديد
            </a>
        </div>

        <div class="d-flex gap-2 print-controls">
            <button id="btnPrint" class="btn btn-print">
                <i class="fas fa-print me-2"></i> طباعة
            </button>
            <button id="btnExportPDF" class="btn btn-pdf">
                <i class="fas fa-file-pdf me-2"></i> تصدير PDF
            </button>
            <button id="btnExportImage" class="btn btn-image">
                <i class="fas fa-image me-2"></i> تصدير صورة
            </button>
            <button id="btnFullscreen" class="btn btn-fullscreen">
                <i class="fas fa-expand me-2"></i> ملء الشاشة
            </button>
        </div>
    </div>

    @if (Model.RootPersons != null && Model.RootPersons.Any())
    {
        <!-- إحصائيات سريعة -->
        <div class="tree-stats mb-4">
            <div class="row text-center">
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-total">
                        <div class="stat-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.AllPersons.Count</h3>
                            <span>إجمالي الأفراد</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-female">
                        <div class="stat-icon">
                            <i class="fas fa-venus"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.AllPersons.Count(p => p.Gender == "Female")</h3>
                            <span>الإناث</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-male">
                        <div class="stat-icon">
                            <i class="fas fa-mars"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.AllPersons.Count(p => p.Gender == "Male")</h3>
                            <span>الذكور</span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-6">
                    <div class="stat-card stat-roots">
                        <div class="stat-icon">
                            <i class="fas fa-layer-group"></i>
                        </div>
                        <div class="stat-content">
                            <h3>@Model.RootPersons.Count</h3>
                            <span>الجذور</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- منطقة الشجرة الرئيسية -->
        <div id="familyTreeContainer" class="family-tree-container">
            <div class="family-tree" id="familyTree">
                @foreach (var rootPerson in Model.RootPersons)
                {
                    var children = Model.AllPersons.Where(p => p.FatherId == rootPerson.Id).ToList();

                    <div class="root-person">
                        <!-- عرض الشخص الجذر -->
                        <div class="person-card @rootPerson.Gender.ToLower() level-0 connector">
                            <div class="person-avatar">
                                @if (rootPerson.Gender == "Male")
                                {
                                    <i class="fas fa-male"></i>
                                }
                                else
                                {
                                    <i class="fas fa-female"></i>
                                }
                            </div>
                            <div class="person-name">
                                @rootPerson.FirstName
                                @rootPerson.FatherName
                                @rootPerson.GrandFatherName
                                @rootPerson.LastName
                            </div>
                            <div class="person-details">
                                @if (rootPerson.BirthDate.HasValue)
                                {
                                    <div class="detail-item">
                                        <i class="fas fa-birthday-cake"></i>
                                        @rootPerson.BirthDate.Value.ToShortDateString()
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(rootPerson.City))
                                {
                                    <div class="detail-item">
                                        <i class="fas fa-city"></i>
                                        @rootPerson.City
                                    </div>
                                }
                            </div>
                            <div class="person-actions">
                                <a href="@Url.Action("Details", "Person", new { id = rootPerson.Id })" class="btn btn-info btn-sm" title="عرض التفاصيل">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="@Url.Action("Edit", "Person", new { id = rootPerson.Id })" class="btn btn-warning btn-sm" title="تعديل">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Create", "Person", new { familyTreeId = rootPerson.FamilyTreeId, fatherId = rootPerson.Id })" class="btn btn-success btn-sm" title="إضافة ابن">
                                    <i class="fas fa-plus"></i>
                                </a>
                            </div>
                        </div>

                        <!-- عرض الأطفال -->
                        @if (children.Any())
                        {
                            <div class="children-container">
                                @foreach (var child in children)
                                {
                                    var grandchildren = Model.AllPersons.Where(p => p.FatherId == child.Id).ToList();

                                    <div class="person-card @child.Gender.ToLower() level-1 connector">
                                        <div class="person-avatar">
                                            @if (child.Gender == "Male")
                                            {
                                                <i class="fas fa-male"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-female"></i>
                                            }
                                        </div>
                                        <div class="person-name">
                                            @child.FirstName
                                            @child.FatherName
                                            @child.GrandFatherName
                                            @child.LastName
                                        </div>
                                        <div class="person-details">
                                            @if (child.BirthDate.HasValue)
                                            {
                                                <div class="detail-item">
                                                    <i class="fas fa-birthday-cake"></i>
                                                    @child.BirthDate.Value.ToShortDateString()
                                                </div>
                                            }
                                            @if (!string.IsNullOrEmpty(child.City))
                                            {
                                                <div class="detail-item">
                                                    <i class="fas fa-city"></i>
                                                    @child.City
                                                </div>
                                            }
                                        </div>
                                        <div class="person-actions">
                                            <a href="@Url.Action("Details", "Person", new { id = child.Id })" class="btn btn-info btn-sm" title="عرض التفاصيل">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", "Person", new { id = child.Id })" class="btn btn-warning btn-sm" title="تعديل">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("Create", "Person", new { familyTreeId = child.FamilyTreeId, fatherId = child.Id })" class="btn btn-success btn-sm" title="إضافة ابن">
                                                <i class="fas fa-plus"></i>
                                            </a>
                                        </div>

                                        <!-- عرض الأحفاد -->
                                        @if (grandchildren.Any())
                                        {
                                            <div class="children-container">
                                                @foreach (var grandchild in grandchildren)
                                                {
                                                    <div class="person-card @grandchild.Gender.ToLower() level-2 connector">
                                                        <div class="person-avatar">
                                                            @if (grandchild.Gender == "Male")
                                                            {
                                                                <i class="fas fa-male"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="fas fa-female"></i>
                                                            }
                                                        </div>
                                                        <div class="person-name">
                                                            @grandchild.FirstName
                                                            @grandchild.FatherName
                                                            @grandchild.GrandFatherName
                                                            @grandchild.LastName
                                                        </div>
                                                        <div class="person-details">
                                                            @if (grandchild.BirthDate.HasValue)
                                                            {
                                                                <div class="detail-item">
                                                                    <i class="fas fa-birthday-cake"></i>
                                                                    @grandchild.BirthDate.Value.ToShortDateString()
                                                                </div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(grandchild.City))
                                                            {
                                                                <div class="detail-item">
                                                                    <i class="fas fa-city"></i>
                                                                    @grandchild.City
                                                                </div>
                                                            }
                                                        </div>
                                                        <div class="person-actions">
                                                            <a href="@Url.Action("Details", "Person", new { id = grandchild.Id })" class="btn btn-info btn-sm" title="عرض التفاصيل">
                                                                <i class="fas fa-eye"></i>
                                                            </a>
                                                            <a href="@Url.Action("Edit", "Person", new { id = grandchild.Id })" class="btn btn-warning btn-sm" title="تعديل">
                                                                <i class="fas fa-edit"></i>
                                                            </a>
                                                            <a href="@Url.Action("Create", "Person", new { familyTreeId = grandchild.FamilyTreeId, fatherId = grandchild.Id })" class="btn btn-success btn-sm" title="إضافة ابن">
                                                                <i class="fas fa-plus"></i>
                                                            </a>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        <!-- رسالة التحميل -->
        <div id="loadingMessage" class="alert alert-info text-center" style="display: none;">
            <i class="fas fa-spinner fa-spin me-2"></i>
            جاري تجهيز الملف للتحميل...
        </div>
    }
    else
    {
        <div class="empty-state text-center py-5">
            <div class="empty-icon mb-4">
                <i class="fas fa-project-diagram"></i>
            </div>
            <h4 class="mb-3">لا توجد بيانات للعرض</h4>
            <p class="text-muted mb-4">لم يتم إضافة أي أفراد إلى هذه الشجرة بعد، أو لا توجد أشخاص بدون أب (جذور).</p>
            <a href="@Url.Action("Create", "Person", new { familyTreeId = Model.FamilyTreeId })" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i> إضافة أول فرد
            </a>
        </div>
    }
</div>

<style>
    /* تحسينات التصميم العامة */
    .family-tree-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    }

    .family-tree {
        padding: 20px;
        background: rgba(255, 255, 255, 0.95);
        border-radius: 10px;
        min-height: 500px;
        position: relative;
    }

    .root-person {
        margin-bottom: 40px;
        text-align: center;
    }

    /* تصميم بطاقات الأشخاص */
    .person-card {
        background: white;
        border-radius: 15px;
        padding: 20px;
        margin: 15px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        min-width: 250px;
        text-align: center;
        position: relative;
        border: 3px solid transparent;
        display: inline-block;
        vertical-align: top;
    }

        .person-card.male {
            border-color: #4facfe;
            background: linear-gradient(135deg, #ffffff 0%, #e3f2fd 100%);
        }

        .person-card.female {
            border-color: #fa709a;
            background: linear-gradient(135deg, #ffffff 0%, #fce4ec 100%);
        }

        .person-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 15px 30px rgba(0,0,0,0.2);
        }

    .person-avatar {
        font-size: 2rem;
        margin-bottom: 10px;
        color: #666;
    }

    .person-card.male .person-avatar {
        color: #4facfe;
    }

    .person-card.female .person-avatar {
        color: #fa709a;
    }

    .person-name {
        font-weight: bold;
        font-size: 16px;
        margin-bottom: 10px;
        color: #2c3e50;
        line-height: 1.4;
    }

    .person-details {
        font-size: 12px;
        color: #7f8c8d;
        margin-bottom: 15px;
    }

    .detail-item {
        margin: 5px 0;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
    }

    .person-actions {
        margin-top: 15px;
        display: flex;
        justify-content: center;
        gap: 5px;
    }

    /* تحسينات التسلسل الهرمي */
    .children-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 30px;
        padding-top: 30px;
        position: relative;
    }

    .level-0 {
        border-width: 4px;
        background: linear-gradient(135deg, #ffffff 0%, #d4edda 100%);
        font-weight: bold;
    }

    .level-1 {
        border-width: 3px;
    }

    .level-2 {
        border-width: 2px;
    }

    /* الخطوط الواصلة المحسنة */
    .connector {
        position: relative;
    }

        .connector::before {
            content: '';
            position: absolute;
            top: -25px;
            left: 50%;
            width: 3px;
            height: 25px;
            background: linear-gradient(to bottom, #4facfe, #00f2fe);
            transform: translateX(-50%);
        }

        .connector::after {
            content: '';
            position: absolute;
            top: -5px;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-left: 8px solid transparent;
            border-right: 8px solid transparent;
            border-top: 10px solid #4facfe;
        }

    /* أزرار التحكم */
    .print-controls {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .btn-print {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
    }

    .btn-pdf {
        background: linear-gradient(135deg, #f093fb, #f5576c);
        color: white;
        border: none;
    }

    .btn-image {
        background: linear-gradient(135deg, #4facfe, #00f2fe);
        color: white;
        border: none;
    }

    .btn-fullscreen {
        background: linear-gradient(135deg, #43e97b, #38f9d7);
        color: white;
        border: none;
    }

    .btn-view-normal {
        background: linear-gradient(135deg, #a8edea, #fed6e3);
        color: #2c3e50;
        border: none;
    }

    /* تحسينات للطباعة */
    @@media print {
        .print-controls, .tree-stats, .btn-view-normal, .btn-primary

    {
        display: none !important;
    }

    .family-tree-container {
        background: white !important;
        box-shadow: none !important;
        padding: 0 !important;
    }

    .family-tree {
        background: white !important;
        padding: 10px !important;
    }

    .person-card {
        box-shadow: 0 1px 3px rgba(0,0,0,0.1) !important;
        break-inside: avoid;
    }

    .person-actions {
        display: none !important;
    }

    }

    /* وضع ملء الشاشة */
    .fullscreen-mode {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        z-index: 9999;
        background: white;
        overflow: auto;
        padding: 20px;
    }

        .fullscreen-mode .family-tree-container {
            margin: 0;
            height: calc(100vh - 40px);
        }

    /* النجوم المتحركة */
    .star {
        position: fixed;
        background: white;
        border-radius: 50%;
        animation: twinkle 5s infinite;
        z-index: -1;
    }

    .star-1 {
        top: 10%;
        left: 10%;
        width: 3px;
        height: 3px;
        animation-delay: 0s;
    }

    .star-2 {
        top: 20%;
        left: 80%;
        width: 2px;
        height: 2px;
        animation-delay: 1s;
    }

    .star-3 {
        top: 60%;
        left: 20%;
        width: 3px;
        height: 3px;
        animation-delay: 2s;
    }

    .star-4 {
        top: 80%;
        left: 60%;
        width: 2px;
        height: 2px;
        animation-delay: 3s;
    }

    @@keyframes twinkle {
        0%, 100% {
            opacity: 0.2;
        }

        50% {
            opacity: 1;
        }
    }
</style>

<script>
    // تهيئة مكتبة jsPDF
    const { jsPDF } = window.jspdf;

    document.addEventListener('DOMContentLoaded', function() {
        // عناصر التحكم
        const btnPrint = document.getElementById('btnPrint');
        const btnExportPDF = document.getElementById('btnExportPDF');
        const btnExportImage = document.getElementById('btnExportImage');
        const btnFullscreen = document.getElementById('btnFullscreen');
        const loadingMessage = document.getElementById('loadingMessage');
        const familyTreeContainer = document.getElementById('familyTreeContainer');

        // طباعة مباشرة
        btnPrint.addEventListener('click', function() {
            window.print();
        });

        // تصدير PDF
        btnExportPDF.addEventListener('click', function() {
            exportToPDF();
        });

        // تصدير صورة
        btnExportImage.addEventListener('click', function() {
            exportToImage();
        });

        // وضع ملء الشاشة
        btnFullscreen.addEventListener('click', function() {
            toggleFullscreen();
        });

        // دالة تصدير PDF
        async function exportToPDF() {
            showLoading();

            try {
                const canvas = await html2canvas(document.getElementById('familyTree'), {
                    scale: 2,
                    useCORS: true,
                    logging: false,
                    backgroundColor: '#ffffff'
                });

                const imgData = canvas.toDataURL('image/png');
                const pdf = new jsPDF('p', 'mm', 'a4');
                const pageWidth = pdf.internal.pageSize.getWidth();
                const pageHeight = pdf.internal.pageSize.getHeight();

                // حساب أبعاد الصورة لتناسب الصفحة
                const imgWidth = canvas.width;
                const imgHeight = canvas.height;
                const ratio = imgWidth / imgHeight;

                let width = pageWidth - 20; // هامش 10mm من كل جانب
                let height = width / ratio;

                if (height > pageHeight - 20) {
                    height = pageHeight - 20;
                    width = height * ratio;
                }

                const x = (pageWidth - width) / 2;
                const y = (pageHeight - height) / 2;

                pdf.addImage(imgData, 'PNG', x, y, width, height);

                // إضافة ترويسة
                pdf.setFontSize(20);
                pdf.setTextColor(40, 40, 40);
                pdf.text('شجرة العائلة - ' + '@Model.FamilyTreeName', pageWidth / 2, 15, { align: 'center' });

                // إضافة تاريخ
                pdf.setFontSize(10);
                pdf.setTextColor(100, 100, 100);
                pdf.text('تم الإنشاء في: ' + new Date().toLocaleDateString('ar-EG'), pageWidth / 2, pageHeight - 10, { align: 'center' });

                pdf.save('شجرة_العائلة_' + '@Model.FamilyTreeName' + '.pdf');

            } catch (error) {
                console.error('Error exporting PDF:', error);
                alert('حدث خطأ أثناء تصدير PDF');
            } finally {
                hideLoading();
            }
        }

        // دالة تصدير صورة
        async function exportToImage() {
            showLoading();

            try {
                const canvas = await html2canvas(document.getElementById('familyTree'), {
                    scale: 2,
                    useCORS: true,
                    logging: false,
                    backgroundColor: '#ffffff'
                });

                canvas.toBlob(function(blob) {
                    saveAs(blob, 'شجرة_العائلة_' + '@Model.FamilyTreeName' + '.png');
                });

            } catch (error) {
                console.error('Error exporting image:', error);
                alert('حدث خطأ أثناء تصدير الصورة');
            } finally {
                hideLoading();
            }
        }

        // دالة ملء الشاشة
        function toggleFullscreen() {
            if (!document.fullscreenElement) {
                familyTreeContainer.requestFullscreen().catch(err => {
                    console.error(`Error attempting to enable fullscreen: ${err.message}`);
                });
                familyTreeContainer.classList.add('fullscreen-mode');
            } else {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                    familyTreeContainer.classList.remove('fullscreen-mode');
                }
            }
        }

        // إدارة أحداث ملء الشاشة
        document.addEventListener('fullscreenchange', function() {
            if (!document.fullscreenElement) {
                familyTreeContainer.classList.remove('fullscreen-mode');
            }
        });

        // دوال مساعدة
        function showLoading() {
            loadingMessage.style.display = 'block';
        }

        function hideLoading() {
            loadingMessage.style.display = 'none';
        }

        // إضافة تأثيرات تفاعلية
        const personCards = document.querySelectorAll('.person-card');
        personCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.zIndex = '1000';
            });

            card.addEventListener('mouseleave', function() {
                this.style.zIndex = '';
            });
        });
    });
</script>